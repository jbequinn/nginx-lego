# Generated by nginxconfig.io
#https://www.digitalocean.com/community/tools/nginx?domains.0.server.domain=mydomain.duckdns.org&domains.0.server.cdnSubdomain=true&domains.0.server.redirectSubdomains=false&domains.0.https.hstsPreload=true&domains.0.https.certType=custom&domains.0.https.sslCertificate=%2Fcerts%2Fexample.crt&domains.0.https.sslCertificateKey=%2Fcerts%2Fexample.key&domains.0.php.php=false&domains.0.reverseProxy.reverseProxy=true&domains.0.reverseProxy.path=%2Fapp1&domains.0.routing.root=false&global.https.sslProfile=modern&global.https.ocspGoogle=false&global.security.limitReq=true&global.performance.brotliCompression=true&global.logging.logNotFound=true&global.nginx.user=nginx&global.nginx.pid=%2Fvar%2Frun%2Fnginx.pid&global.docker.dockerfile=true&global.docker.dockerCompose=true

user                 nginx;
pid                  /var/run/nginx.pid;
worker_processes     auto;
worker_rlimit_nofile 65535;

events {
  multi_accept       on;
  worker_connections 65535;
}

http {
    charset                utf-8;
    sendfile               on;
    tcp_nopush             on;
    tcp_nodelay            on;
    server_tokens          off;
    log_not_found          off;
    types_hash_max_size    2048;
    types_hash_bucket_size 64;
    client_max_body_size   128M;

    # MIME
    include                mime.types;
    default_type           application/octet-stream;

    # Logging
    access_log             /var/log/nginx/access.log;
    error_log              /var/log/nginx/error.log warn;

    # Limits
    limit_req_log_level    warn;
    limit_req_zone         $binary_remote_addr zone=login:10m rate=10r/m;

    # SSL
    ssl_session_timeout    1d;
    ssl_session_cache      shared:SSL:10m;
    ssl_session_tickets    off;

    # Diffie-Hellman Parameters
    ssl_dhparam /config/nginx/dhparams.pem;

    # OCSP Stapling
    ssl_stapling           on;
    ssl_stapling_verify    on;
    resolver               127.0.0.11 valid=30s; # Docker DNS Server
    resolver_timeout       2s;

    # Connection header for WebSocket reverse proxy
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ""      close;
    }

    # Load configs
    include /etc/nginx/conf.d/subdirectories.conf;
    include /config/nginx/sites-enabled/*.subdomain.conf;
}
